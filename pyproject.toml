[tool.poetry]
name = "skill-manager"
version = "0.1.0"
description = ""
license = "MIT"
readme = "README.md"
repository = "https://github.com/JleMyP/skill-manager"
authors = []

[tool.poetry.dependencies]
python = "^3.9"

django = "^3.0.0"
django-reversion = "^3.0"
django-extensions = "^2.2"
django-cors-headers = "^3.1"
django-split-settings = "^1.0"
django-environ = "^0.4.5"
django-polymorphic = "^3.0.0"
django-mptt = "^0.11.0"
django-constance = {version = "^2.4", extras = ["database"]}
django-debug-toolbar = "^2.2"
django-health-check = "^3.12.1"
django-storages = "^1.10.1"

django-loginas = "^0.3.6"
django-object-actions = "^2.0.0"
django-autocompletefilter = "^0.0.6"
django-json-widget = "^1.0.1"
django-markdownx = "^3.0.1"

django-filter = "^2.2"
djangorestframework = "^3.10"
djangorestframework_simplejwt = "^4.3"
djangorestframework-serializer-extensions = "^2.0.0"
django-rest-polymorphic = "^0.1.9"
drf-spectacular = "^0.13.1"

requests = "^2.22.0"
psycopg2-binary = "^2.8.4"
mdv = "^1.7.4"
uvicorn = "^0.11.5"
serverless-wsgi = "^1.7.5"
boto3 = "^1.15.11"
structlog = "^21.2.0"

opentelemetry-api = {version = "^1.7.1", optional = true}
opentelemetry-sdk = {version = "^1.7.1", optional = true}
opentelemetry-exporter-otlp = {version = "^1.7.1", optional = true}
opentelemetry-instrumentation-django = {version = "^0.26b1", optional = true}
opentelemetry-instrumentation-asgi = {version = "^0.26b1", optional = true}

[tool.poetry.dev-dependencies]
Werkzeug = "^1.0"
ipython = "^7.7"
isort = "^4.3"
flake8 = "^3.7.9"
flakehell = "^0.9.0"
flake8-isort = "^2.8.0"
flake8-bandit = "^2.1.2"
flake8-variables-names = "^0.0.3"
flake8-bugbear = "^20.1.4"
flake8-builtins = "^1.4.2"
flake8-annotations-complexity = "^0.0.6"
flake8-annotations = "^2.7.0"
django-stubs = "1.8.0"
djangorestframework-stubs = "^1.4.0"
types-Markdown = "^3.3.6"
types-PyYAML = "^6.0.0"
types-pytz = "^2021.3.0"
types-requests = "^2.25.11"
coverage = {version = "^5.0.3", extras = ["toml"]}

[tool.poetry.extras]
tracing = [
  "opentelemetry-api",
  "opentelemetry-sdk",
  "opentelemetry-exporter-otlp",
  "opentelemetry-instrumentation-django",
  "opentelemetry-instrumentation-asgi",
]

[tool.isort]
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 3
skip_glob = "**/migrations/*"

[tool.flakehell]
exclude = [".git", "__pycache__", "migrations"]
max_line_length = 100
format = "grouped"
show_source = true

[tool.flakehell.plugins]
pyflakes = [
  "+*",
  "-F403",  # wildcard import
  "-F405",  # undefined name from wildcard import
]
pycodestyle = [
  "+*",
  "-W503",  # line break before binary operator
]
flake8-annotations = [
  "+*",
  "-ANN002",  # annotation for *args
  "-ANN003",  # annotation for **kwargs
  "-ANN101",  # annotation for self
  "-ANN102",  # annotation for cls methods
]
"flake8-*" = ["+*"]
mccabe = ["+*"]

[tool.coverage.run]
omit = [ "**/migrations/*" ]
source = [ "src" ]

[build-system]
requires = ["poetry>=1.0.0"]
build-backend = "poetry.masonry.api"
